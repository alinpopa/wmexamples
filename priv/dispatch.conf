%% -*- mode: erlang -*-

{[], wmexamples_resource, []}.

%% CouchDB proxy example
%% This will expose all couchdb functionality through webmachine
%% such that requests to
%%   http://localhost:5984/            (default couch host:port)
%% and
%%   http://localhost:8000/couch/      (chosen proxy host:port/path)
%% are equivalent.
%%
%% A few commands to try:
%%   curl http://localhost:8000/couch/
%%   curl -X PUT http://localhost:8000/couch/mytestdb
%%   curl -X PUT http://localhost:8000/couch/mytestdb/123 \
%%        --data "{\"hello\":\"goodbye\"}"
%%   curl http://localhost:8000/couch/mytestdb/123
{["couch",'*'],                   %% expose resource at /couch/*
 couchdb_proxy,                   %% defined in couchdb_proxy.erl
 {"http://localhost:8000/couch/", %% "ExternalPath" init param
  "http://localhost:5984/"}}.     %% "CouchPath" init param


%% Environment Variable Inspection example
%% Try:
%%   curl http://localhost:8000/_env
%%   curl -u webmachine:rules -H "Content-type: application/json" \
%%        -X PUT http://localhost:8000/_env/DEMO --data "\"hello\""
{["_env"],       %% exposed at /_env/
 env_resource,   %% defined in env_resource.erl
 []}.            %% no configuration

{["_env", env],  %% exposed at /_env/VARIABLE_NAME
 env_resource,   %% defined in env_resource.erl
 []}.            %% no configuration


%% Webmachine Trace Utility
%% These are static dispatch lines to enable the trace utility
%% every time this application is started.
{["wmtrace",'*'],          %% exposed at /wmtrace/*
 wmtrace_resource,         %% defined in wmtrace_resource.erl
                           %%   (included with webmachine)
 [{trace_dir, "traces"}]}. %% trace files are in "traces" directory

%% sampletrace is meant for nothing other than generating a few sample
%% trace files.  It expects a "code" query parameter, specifying which
%% response code you'd like.
%% Current supported codes are: 200 (default), 404, 301, and 500
{["sampletrace"],         
 sampletrace_resource,
 []}.
